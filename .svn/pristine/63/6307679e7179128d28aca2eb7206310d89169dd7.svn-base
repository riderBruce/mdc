import sys
sys.path.append(r"D:\Project_Python\webMDChecker\MDChecker\MailControler")

from model_mail_get import EmailAttachDownloader
from model_excel_export import SummaryExcelData
from model_excel_import import ExcelDataConverter
from model_data import *
from model_excel_styler import ExcelFormMaker
from model_mail_styler import MailFormMaker
from model_mail_send import MailSender



class PensionDataConverter:
    def __init__(self, dc, file_name):
        self.dc = dc
        self.file_name = file_name

    def pension_data_converter(self):
        dc = self.dc
        file_name = self.file_name
        # request pension data : all
        df_pension = dc.request_pension_data(file_name)
        df_pension = df_pension.astype({'확정일수': float})
        df_pension['현장명p'] = df_pension['현장명p'].str.strip()

        # request matching table : site code - site name
        df_mst_site = dc.call_df_from_db_with_column_name('mdc_mst_site')
        df_mst_site['현장명p'] = df_mst_site['현장명p'].str.strip()

        # request matching table : subcon
        df_mst_subcon = dc.call_df_from_db_with_column_name('mdc_mst_subcon')

        # add site_code on pension data
        df_pension = pd.merge(df_pension, df_mst_site, how='left', on='현장명p')

        # add subcon name on pension data
        df_pension = pd.merge(df_pension, df_mst_subcon, how='left', on='업체명p')
        df_pension.loc[lambda df: df['업체명'].isna(), ['업체명']] = ""
        df_pension['업체명'] = df_pension.apply(lambda x: x['업체명p'] if x['업체명'] == "" else x['업체명'], axis=1)

        try:
            siteCode = df_pension[~df_pension['현장코드'].isna()]['현장코드'].unique()[0]
        except Exception as ex:
            logWrite(f"{ex}")
            return False, False
        df_pension.loc[lambda df: df['현장코드'].isna(), ['현장코드']] = siteCode
        # slice pension data getting on this_month
        this_month = datetime.now().strftime('%Y-%m')
        df_pension = df_pension[df_pension['send_date'].str.contains(this_month)]
        df_pension['send_date'] = df_pension['send_date'].str[:16]

        # siteCodes = ['J731', 'GJ41', 'GJ21', 'IZ29', 'IX88']
        # siteCodes = ['GJ21']

        # slice pension data by site_code
        df_pension_temp = df_pension[df_pension['현장코드'] == siteCode]

        # month = "2022-05"
        # # method 1. 수정일 기준
        # max_date = df_pension_temp['수정일'].max()
        # a_month_before = datetime.strptime(max_date, '%Y%m%d') - relativedelta(months=1)
        # a_month_before = datetime.strftime(a_month_before, '%Y-%m')

        # method 2. 받은달 전달 기준
        max_date = df_pension_temp['send_date'].max()
        a_month_before = datetime.strptime(max_date[:10], '%Y-%m-%d') - relativedelta(months=2)
        ################# 현재 자료가 5월달이기 때문에 2개월 전으로 셋팅하나, 6월자료는 반드시 1개월 전으로 고칠 것
        a_month_before = datetime.strftime(a_month_before, '%Y-%m')

        # request ilbo md by site_code / month
        df = dc.request_ilbo_md_by_site(siteCode, a_month_before)
        # add ilbo md on pension data that sliced each site_code/monthly
        df_pension_temp = df_pension_temp[['현장코드', 'send_date', '현장명p', '업체명', '확정일수']]
        df = pd.merge(df, df_pension_temp, how='outer', on=['현장코드', '업체명'])
        df.loc[lambda df: df['현장명p'].isna(), ['현장명p']] = "◎ 퇴직공제부금 미등록"
        df.loc[lambda df: df['send_date'].isna(), ['send_date']] = ""
        df['분석월'] = a_month_before

        # format data
        df = df[['분석월', '현장코드', '현장명p', 'send_date', '업체명', '근로자수', '소장', '직원', '확정일수']]
        df = df.sort_values(['확정일수', '근로자수'], ascending=False, kind='mergesort')
        df = df.sort_values(['분석월', '현장코드'], ascending=True, kind='mergesort')
        df = df.rename(columns={'send_date': '수신일시', '근로자수': '출역일수', '소장': '소장출역', '직원': '직원출역'})
        df = df.fillna(0)

        dc.delete_old_data('mdc_result', f"where 분석월 = '{df.분석월.unique()[0]}' and 현장코드 = '{siteCode}';")
        dc.insert_data_to_db(df, 'mdc_result')


        # dc.conn.commit()


        # # make excel file
        # outputFileName = f"{resultPath}\{sRunTime}_data.xlsx"
        # # outputFileName = r"D:\Project_Python\webMDChecker\MDChecker\data\220704\data_업체명 매칭 후 02.xlsx"
        # with pd.ExcelWriter(outputFileName) as writer:
        #     if len(df) > 0:
        #         df.to_excel(writer, sheet_name="data")

        return siteCode, a_month_before


if __name__ == '__main__':
    # db controller
    dc = DataControl()
    pc = PensionDataConverter(dc)
    pc.pension_data_converter()