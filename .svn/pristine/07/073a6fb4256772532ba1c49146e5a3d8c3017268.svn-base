import sys
sys.path.append(r"D:\Project_Python\webMDChecker\MDChecker\MailControler")

from model_mail_get import EmailAttachDownloader
from model_excel_export import SummaryExcelData
from model_excel_import import ExcelDataConverter
from model_data import *
from model_excel_styler import ExcelFormMaker
from model_mail_styler import MailFormMaker
from model_mail_send import MailSender


dc = DataControl()



# request pension data : all
df_pension = dc.call_df_from_db_with_column_name('mdc_raw_md')
df_pension = df_pension.astype({'확정일수': float})
df_pension['현장명p'] = df_pension['현장명p'].str.strip()

# request matching table : site code - site name
df_mst_site = dc.call_df_from_db_with_column_name('mdc_mst_site')
df_mst_site['현장명p'] = df_mst_site['현장명p'].str.strip()

# request matching table : subcon
df_mst_subcon = dc.call_df_from_db_with_column_name('mdc_mst_subcon')

# add site_code on pension data
df_pension = pd.merge(df_pension, df_mst_site, how='left', on='현장명p')

# add subcon name on pension data
df_pension = pd.merge(df_pension, df_mst_subcon, how='left', on='업체명p')
df_pension.loc[lambda df: df['업체명'].isna(), ['업체명']] = ""
df_pension['업체명'] = df_pension.apply(lambda x: x['업체명p'] if x['업체명'] == "" else x['업체명'], axis=1)
df_pension.loc[lambda df: df['현장코드'].isna(), ['현장코드']] = "코드누락"
# generate md data by all of site
siteCodes = df_pension[~df_pension['현장코드'].isna()]['현장코드'].unique()
# siteCodes = ['J731', 'GJ41', 'GJ21', 'IZ29', 'IX88']
# siteCodes = ['GJ21']

df = pd.DataFrame()
for siteCode in siteCodes:
    # slice pension data by site_code
    df_pension_temp = df_pension[df_pension['현장코드'] == siteCode]

    # get month from pension data by each site
    # month = "2022-05"
    max_date = df_pension_temp['수정일'].max()
    a_month_before = datetime.strptime(max_date, '%Y%m%d') - relativedelta(months=1)
    a_month_before = datetime.strftime(a_month_before, '%Y-%m')

    # request ilbo md by site_code / month
    df_ilbo = dc.request_ilbo_md_by_site(siteCode, a_month_before)
    # add ilbo md on pension data that sliced each site_code/monthly
    df_pension_temp = df_pension_temp[['현장코드', '현장명p', '업체명', '확정일수']]
    df_ilbo = pd.merge(df_ilbo, df_pension_temp, how='outer', on=['현장코드', '업체명'])
    df_ilbo.loc[lambda df: df['현장명p'].isna(), ['현장명p']] = "◎ 퇴직공제부금 미등록 / 업체명 확인요망"
    df_ilbo['연월'] = a_month_before

    # merge all site data
    df = pd.concat([df, df_ilbo])

# format data
df = df[['연월', '현장코드', '현장명p', '업체명', '근로자수', '소장', '직원', '확정일수']]
df = df.sort_values(['확정일수', '근로자수'], ascending=False, kind='mergesort')
df = df.sort_values(['연월', '현장코드'], ascending=True, kind='mergesort')

# make excel file
outputFileName = r"D:\Project_Python\webMDChecker\MDChecker\data\220704\data_업체명 매칭 후 02.xlsx"
with pd.ExcelWriter(outputFileName) as writer:
    if len(df) > 0:
        df.to_excel(writer, sheet_name="data")